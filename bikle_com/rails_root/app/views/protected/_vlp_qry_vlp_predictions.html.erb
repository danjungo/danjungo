<pre><code class="sql">

23:45:16 SQL> @qry_vlp_predictions.sql 
23:45:24 SQL> --
23:45:24 SQL> -- qry_vlp_predictions.sql
23:45:24 SQL> --
23:45:24 SQL> 
23:45:24 SQL> -- First look at just the predictions:
23:45:24 SQL> SELECT COUNT ( ROUND ( run_date )) , ROUND ( run_date )
23:45:24   2  FROM vlp_predictions
23:45:24   3  GROUP BY ROUND ( run_date )ORDER BY ROUND ( run_date )
23:45:24   4  /

COUNT(ROUND(RUN_DATE)) ROUND(RUN_
---------------------- ----------
                 49483 2009-07-14
               2705037 2009-07-15
                639051 2009-07-16
                476288 2009-07-17
                236318 2009-07-18

Elapsed: 00:00:07.18
23:45:31 SQL> 
23:45:31 SQL> SELECT ROUND(prob_up,1),COUNT(ROUND(prob_up,1))
23:45:31   2  FROM vlp_predictions
23:45:31   3  GROUP BY ROUND(prob_up,1)
23:45:31   4  ORDER BY ROUND(prob_up,1)
23:45:31   5  /

ROUND(PROB_UP,1) COUNT(ROUND(PROB_UP,1))
---------------- -----------------------
               0                   59296
              .1                  169621
              .2                  184730
              .3                  221885
              .4                  359259
              .5                  252299
              .6                  353005
              .7                  555355
              .8                  988589
              .9                  888923
               1                   73215

11 rows selected.

Elapsed: 00:00:02.12
23:45:33 SQL> 
23:45:33 SQL> -- Join vlp_predictions with vlppg to see how well the predictions did.
23:45:33 SQL> SELECT COUNT(*)FROM vlp_predictions;

  COUNT(*)
----------
   4106177

Elapsed: 00:00:00.21
23:45:33 SQL> 
23:45:33 SQL> -- Do we get a good join?
23:45:33 SQL> SELECT COUNT(*)
23:45:33   2  FROM vlp_predictions v, vlppg g
23:45:33   3  WHERE v.optid = g.optid
23:45:33   4  
23:45:33 SQL> 
23:45:33 SQL> DROP   TABLE vlp_pred_pg;

Table dropped.

Elapsed: 00:00:00.82
23:45:34 SQL> CREATE TABLE vlp_pred_pg COMPRESS AS SELECT
23:45:34   2  v.optid
23:45:34   3  ,prob_up
23:45:34   4  ,pg20
23:45:34   5  ,pdate
23:45:34   6  FROM vlp_predictions v, vlppg g
23:45:34   7  WHERE v.optid = g.optid
23:45:34   8  -- Newer data should give a better SVM result.
23:45:34   9  AND pdate > '2004-01-01'
23:45:34  10  /

Table created.

Elapsed: 00:05:01.64
23:50:36 SQL> 
23:50:36 SQL> ANALYZE TABLE vlp_pred_pg ESTIMATE STATISTICS SAMPLE 9 PERCENT;

Table analyzed.

Elapsed: 00:00:05.01
23:50:41 SQL> 
23:50:41 SQL> -- Look for correlation between prediction and pg20
23:50:41 SQL> SELECT ROUND(prob_up,1),COUNT(ROUND(prob_up,1)),ROUND(AVG(pg20),3)avg_pg20
23:50:41   2  FROM  vlp_pred_pg
23:50:41   3  GROUP BY ROUND(prob_up,1)
23:50:41   4  ORDER BY ROUND(prob_up,1)
23:50:41   5  /

ROUND(PROB_UP,1) COUNT(ROUND(PROB_UP,1))   AVG_PG20
---------------- ----------------------- ----------
               0                    8277      -.035
              .1                   65641      -.034
              .2                  108971      -.037
              .3                  156784      -.021
              .4                  296825       -.01
              .5                  192950      -.013
              .6                  292783       .008
              .7                  485257        .01
              .8                  906942       .021
              .9                  816193       .011
               1                   60896       .008

11 rows selected.

Elapsed: 00:00:02.90
23:50:44 SQL> 
23:50:44 SQL> -- Look at puts for rounded months: 1,6,7,8,9
23:50:44 SQL> SELECT ROUND(prob_up,1),COUNT(ROUND(prob_up,1)),ROUND(AVG(pg20),3)avg_pg20
23:50:44   2  FROM  vlp_pred_pg
23:50:44   3  WHERE TO_CHAR(ROUND(pdate,'MM'),'MM')IN('01','06','07','08','09')
23:50:44   4  GROUP BY ROUND(prob_up,1)
23:50:44   5  ORDER BY ROUND(prob_up,1)
23:50:44   6  /

ROUND(PROB_UP,1) COUNT(ROUND(PROB_UP,1))   AVG_PG20
---------------- ----------------------- ----------
               0                    1215       .023
              .1                   23807      -.016
              .2                   50419      -.024
              .3                   64156      -.015
              .4                   75874      -.003
              .5                   92369       .014
              .6                  136113       .058
              .7                  214266        .06
              .8                  422620       .058
              .9                  406018        .05
               1                   35399       .062

11 rows selected.

Elapsed: 00:00:06.19
23:50:50 SQL> 
23:50:50 SQL> -- for spreadsheet:
23:50:50 SQL> -- Look for correlation between prediction and pg20
23:50:50 SQL> SELECT ROUND(prob_up,1)||','||ROUND(100*AVG(pg20),1)||','||COUNT(ROUND(prob_up,1))x
23:50:50   2  FROM  vlp_pred_pg
23:50:50   3  GROUP BY ROUND(prob_up,1)
23:50:50   4  ORDER BY ROUND(prob_up,1)
23:50:50   5  /

X
---------------------------------------------------------------------------------------------------
0,-3.5,8277
.1,-3.4,65641
.2,-3.7,108971
.3,-2.1,156784
.4,-1,296825
.5,-1.3,192950
.6,.8,292783
.7,1,485257
.8,2.1,906942
.9,1.1,816193
1,.8,60896

11 rows selected.

Elapsed: 00:00:02.51
23:50:52 SQL> 
23:50:52 SQL> -- for spreadsheet:
23:50:52 SQL> -- Look at puts for rounded months: 1,6,7,8,9
23:50:52 SQL> SELECT ROUND(prob_up,1)||','||ROUND(100*AVG(pg20),1)||','||COUNT(ROUND(prob_up,1))x
23:50:52   2  FROM  vlp_pred_pg
23:50:52   3  WHERE TO_CHAR(ROUND(pdate,'MM'),'MM')IN('01','06','07','08','09')
23:50:52   4  GROUP BY ROUND(prob_up,1)
23:50:52   5  ORDER BY ROUND(prob_up,1)
23:50:52   6  /

X
---------------------------------------------------------------------------------------------------
0,2.3,1215
.1,-1.6,23807
.2,-2.4,50419
.3,-1.5,64156
.4,-.3,75874
.5,1.4,92369
.6,5.8,136113
.7,6,214266
.8,5.8,422620
.9,5,406018
1,6.2,35399

11 rows selected.

Elapsed: 00:00:06.17
23:50:59 SQL> 


</code></pre>
